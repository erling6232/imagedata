[build-system]
requires = [
    "setuptools>=65.5.1",
    "wheel>=0.32.3",
    "pillow>=10.0.0"
]
build-backend = "setuptools.build_meta"

[project]
name = "imagedata"
dynamic = ["version"]
authors = [
    {name = "Erling Andersen", email = "Erling.Andersen@Helse-Bergen.NO"}
]
maintainers = [
    {name = "Erling Andersen", email = "Erling.Andersen@Helse-Bergen.NO"}
]
description = "Read/write medical image data"
readme = {file = "README.rst", content-type = "text/x-rst"}
requires-python = ">=3.9,<3.13"
keywords = [
    "dicom",
    "python",
    "medical",
    "imaging",
    "pydicom",
    "pynetdicom",
    "itk"
]
license = {file = "LICENSE.txt"}
dependencies = [
    "pydicom>=2.4.0",
    "pynetdicom>=1.2.0, <2",
    "itk-io>=5.4.0",
    "scikit-build-core",
    "nibabel >= 5.0.0",
    "numpy >= 1.22.2, < 1.27",
    "pandas",
    "scipy >= 1.2.4",
    "python-magic",
    "python-magic-bin; platform_system=='Windows'",
    "imageio",
    "pillow >= 10.0.0",
    "xnat",
    "matplotlib >= 3.8.0",
    "opencv-python-headless"
]
classifiers = [
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Development Status :: 4 - Beta",
    "Environment :: Other Environment",
    "Intended Audience :: Developers",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Medical Science Apps."
]

[project.urls]
Homepage = "https://github.com/erling6232/imagedata"
Documentation = "https://imagedata.readthedocs.io"
"Source Code" = "https://github.com/erling6232/imagedata"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.dynamic]
version = {file = "VERSION.txt"}

[tool.cibuildwheel]
test-requires = "coverage"
# test-command = "coverage run -m unittest discover {project}/tests -t {project}"
test-command = "coverage run -m unittest discover imagedata/tests -t imagedata"

[project.scripts]
dicom_dump = "imagedata.image_data:dump"
image_calculator = "imagedata.image_data:calculator"
image_data = "imagedata.image_data:conversion"
image_list = "imagedata.image_data:image_list"
image_show = "imagedata.image_data:show"
image_statistics = "imagedata.image_data:statistics"
timeline = "imagedata.image_data:timeline"

[project.entry-points."imagedata_plugins"]
dicomformat = "imagedata.formats.dicomplugin:DICOMPlugin"
itkformat = "imagedata.formats.itkplugin:ITKPlugin"
matformat = "imagedata.formats.matplugin:MatPlugin"
niftiformat = "imagedata.formats.niftiplugin:NiftiPlugin"
filesystemarchive = "imagedata.archives.filesystemarchive:FilesystemArchive"
zipfilearchive = "imagedata.archives.zipfilearchive:ZipfileArchive"
dicomtransport = "imagedata.transports.dicomtransport:DicomTransport"
filetransport = "imagedata.transports.filetransport:FileTransport"
xnattransport = "imagedata.transports.xnattransport:XnatTransport"
